apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: "runtime/default"
  labels:
    app: {{ .Values.redis.name }}
  namespace: {{ .Values.namespace }}
  name: {{ .Values.redis.name }}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.redis.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.redis.name }}
    spec:
      {{- if not .Values.local }}
      nodeSelector:
        service: {{ .Values.caddy.name }}
      {{- end }}
      #automountServiceAccountToken: false
      {{- if .Values.imagePullSecrets -}}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ .Values.redis.name }}
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          securityContext:
            runAsNonRoot: true
            runAsUser: {{ .Values.redis.securityContext.runAsUser }}
            runAsGroup: {{ .Values.redis.securityContext.runAsGroup }}
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            capabilities:
              drop:
                - ALL
          resources:
{{ toYaml .Values.redis.resources | indent 12 }}
          ports:
{{ toYaml .Values.redis.ports | indent 12 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.redis.name }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: {{ .Values.redis.name }}
  ports:
    {{- range .Values.redis.service.ports }}
    - name: {{ .name }}
      protocol: {{ .protocol }}
      port: {{ .port }}
      targetPort: {{ .targetPort }}
    {{- end }}